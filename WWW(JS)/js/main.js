//Так делаются однострочные комментарии
/*
Так делаются многострочные комментарии, как в CSS
 */
//document.write("Hello World!"); document отвечает за весь html блок, DOM
//console.info("Hello World!"); содержит лог, так же как и лог
//console.log("Hello World!");
//console.error("Hello World!") //выводит ошибку, можно детально посмотреть объекты ошибок, красный цвет
/* console.warn("Hello World!") *//*различие между еррором, то что, еррор надо обязательно фиксить, подсвечивается
желтым цветом*/

/*var означает переменную (variable) задается любое значение кроме $% и начинается не с числа, содержит
одно какое-либо значение*/
// var num;
// num = 5;
//const создает константу, которая имеет только одно значение и не может быть перераспределен
/* const num=5;
    num=7;
    console.log("Переменная" + num) Данное выражение выдаст ошибку, т.к пытались задать другое значение
 константе*/
// var num=5;
// num = 7;
// console.log("Переменная:" + num);
// //Типы данных не строгие, можно задать любой тип данных
// var number;
// number = true; //boolean
//  var num_1 = 5.5; //float
// var num_2 = "String";

// // 5 урок Математические действия
// var num_1 = 5;
// var num_2 = 10;
// ver = num_1 - num_2;
// console.log("Вычитание" + (num_1-num_2));
//
// var num_3 = 5;
// //Имеются различные формулы
// num_3 = num_3 +7;
// //Такая же запись, но сокращенно
// num_3 += 7;
//  num_3 -= 7;
// //Если добавлять единицу или отнимать, можно прописать в таком виде
// num_3 ++;
// num_3 --;
//
// console.log("Результат" + num_3);
//
// //Cложение чисел и строк
// //Для того, чтобы из строковых значений сделать число, необходимо прописать перед ней Number(число)
// //При сложении строковых и числовых значений, числовое значение автоматический принимает строковое значение
// var str_1 = Number("12");
// var str_2 = Number("2");
//
// console.log("Результат" + (str_1+str_2));
//
// //Встроенный класс Math. как и console имеет свои методы: Math.min(); Math.max(); Math.sinx(); Math.PI;
// console.log("Math min " + Math.min(2, 4, 10, 6, -8));
// console.log("Math max " + Math.max(2, 4, 10, 6, -8));


//===========6.Условные операторы
/*Операторы условия создается с помощью if ( внутри скобок задается условия) если условие означает
истину, {тогда следует код в фигурных скобках, называется он телом условия}*/
/* В скобках пишется двойное равно, потому что в одном равно мы бы дали значение переменной*/

/* if (number != 5 В данном выражении используется способ "не равно") (number >=5) (number <= 5){
console.log("OK");
 */
//Если оператор имеет только одно тело условия, можно не ставить фигурные скобки
//Else стоит всегда в конце оператора if, не используется без оператора if
/*Else if стоит всегда между if и оператором else, работает если оператор if не дает true, то идет оператор
else if, а затем только else*/
/*Если нужно указать в операторе if(более одного условия, тогда нужно ставить || ) || означает "или" т.е
выполняется или это условие или же другое*/
/*Если нужно указать в операторе if( более одного условия, тогда нужно ставить &&) && означает "и" т.е
должно выполниться как и первое условие, так и другое*/
//ishasHouse==true можно заменить на просто ishasHouse, если же ishasHouse == false, то можно !ishasHouse
var number=15;
var ishasHouse=true;
if(number!=15  &&  ishasHouse){
    console.log("OK");
} else if(number<=10){
    console.log("OK!");
} else if(number >=10){
    console.log(">=10");
} else if(number==15){
    console.log("==15");
} else {
    console.log("Error!")
}

/*Оператор switch case используется когда нужно проверить множество значений в переменной, нельзя использовать
символы ><= в данном операторе, вы проверяете только конкретное значение*/
/*Switch (проверяемое значение)
  case "cлучай, какое значение может содержать":
   после двоеточия ставится действие console.log();
   и под конец пишется break; чтобы перейти на другое условие*/
//Если же ниодин кейс не подошел, можно закончить оператором default: после него можно не ставить break
var stroka="word";
switch (stroka){
    case "4":
        console.log("Peremennaia 4");
        break;
    case "45":
        console.log("Peremennaia 45");
        break;
    case "word":
        console.log("Peremennaia so slovom word");
        break;
    default:
        console.log("Default");
}
/*Тернарная функция, сокращенная if else. If (x<a){ console.log(x+a)} else {console.log(x-a)}*/
/* после знака вопроса "?" идет истина, после знака двоеточия ":" else*/
var x=6, a=8;
var res = x<a ? (x+a):(x-a);
console.log("Результат " + res);

var nomer = 100;
var nomer1 = 500;
var rezultat = nomer>=nomer1? "Viigral nomer 100" : "viigral nomer 50";
console.log(rezultat);
if(nomer>nomer1){
    console.log("Pobeda nomer");
} else{
    console.log("Pobeda nomer1");
}
switch (nomer){
    case 88:
        console.log("88");
        break;
    case 100:
        console.log("100 case");
        break;
    default:
        console.log("Default");
}

//7.Массивы данных. Одномерные и многомерные массивы
//Array массивы, содержат в себе много значений,в отличии от переменной, начиная от цифр до булева
//Так же начинаются с 0 индекса [0], можно переназначить данные массива arr[1] = "word"
//arr.length метод массива, показывающую длину массива, т.е сколько элементов в нем
var arr = [5, 4, "string", -100, 5.7, true];
arr[1] = "word";
console.log(arr.length);

//Многомерные массивы
//Cоздаются из массива, в котором каждый элемент, является массивом и содержит какие-то элементы

var matrix = [
    [5,4] ,["string", -100], [5.7, true]
]
matrix[1][0] = "word";
console.log(matrix);

//8/Цикла в JS. Операторы циклов
//Цикл for (внутри скобок пишется переменная i=0; далее пишется условие i < 10; далее пишется действие i++)
//Удобен для вычисления массиво
// for(var i=100; i>=10; i /=2){
//     console.log(i);
// }
// //Цикл while, отличается от цикла for, тем что условие ставится не в скобках while(j<10){console.log(j) j++}
// //В отличии от for, while можно использовать булевые выражения. var ishascar = true; while(ishascar){}
// var j=1000;
//
// while(j > 10){
//     console.log(j);
//     j -= 100;
// }
// //Цикл do while, всегда выполняется первая итерация цикла. Необходимо использовать когда надо выполнить код
// // а затем выполнить условие
// var x = 0;
// do {
//     console.log(x);
//     x++;
// } while (x < 10);

//Break выводит из цикла, прерывает итерацию
// for (var i = 10; i <= 20; i+=2){
//     if(i > 15)
//         break;
//     console.log(i);
// }
//Continue заставляет цикл вернуться к началу,в  этом примере он скипает числа которые делятся на 2 и выводятся
//только нечетные числа. Пропускает одну определенную итерацию
// for (var i = 10; i <= 20; i++){
//     if(i%2==0)
//         continue;
//     console.log(i);
// }

 var massiv = [2, 5, 6, 8, "strokaasd"];
for(var i = 0; i < massiv.length; i++){


    if(massiv[i]=="strokaasd")
        continue;
    massiv[i] *= 2;

    console.log("Элементы массива " +(i +1)+ ":" + massiv[i]);

}
